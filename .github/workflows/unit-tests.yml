name: Unit Tests

on:
  push:
    paths:
      - kubernetes/**
      - .github/workflows/unit-tests.yml

jobs:
  run-unit-tests:
    name: "Run Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Cache/Restore dependencies"
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip  # This path is specific to Ubuntu
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt.lock', 'tooling.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r kubernetes/requirements.txt.lock
          pip install -r kubernetes/tooling.txt

      - name: "Run unit tests for Kubernetes certifications"
        run: |
          cd kubernetes
          python -m pytest \
            --junitxml=../to-be-uploaded/tests-results/kubernetes/unit-tests.xml \
            --cov=src/ --cov-report=xml \
            tests/tests.py
          mv coverage.xml ../to-be-uploaded/tests-results/coverage.xml

      - name: "Upload tests results artifact"
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: tests-results
          path: to-be-uploaded
          if-no-files-found: error

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: tests-results
      - name: "Publish Unit Tests Results"
        uses: EnricoMi/publish-unit-test-result-action@v1.4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Tests Results
          # TODO : Re-enable when it's out
          #comment_title: Unit Test Statistics 
          hide_comments: all but latest
          comment_on_pr: true
          files: tests-results/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false

  upload-coverage-to-codecov:
    name: "Upload coverage to Codecov"
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: tests-results
      - uses: codecov/codecov-action@v1  # https://github.com/codecov/codecov-action
        with:
          file: ./tests-results/coverage.xml
          flags: unit-tests
          env_vars: "python, pytest"
          name: codecov-github-actions
          fail_ci_if_error: true
